{"version":3,"sources":["components/inputSearch.js","components/map.js","index.js"],"names":["useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","InputSearch","onInputChange","onSearch","locationText","classes","Container","fixed","FormControl","fullWidth","TextField","className","label","onChange","value","Button","onClick","color","Map","options","onMount","onMountProps","ref","useRef","useState","map","setMap","useEffect","onLoad","window","google","maps","current","script","document","createElement","src","head","append","addEventListener","removeEventListener","style","height","margin","borderRadius","defaultProps","center","lat","lng","zoom","App","setLocationText","quakes","setQuakes","lon","country","setCountry","onButtonClick","a","trim","alert","fetch","then","res","json","data","length","getQuakes","boundingbox","catch","err","console","log","bb","earthquakes","mapProps","Number","links","forEach","item","Marker","position","magnitude","title","datetime","Typography","variant","event","target","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fa10082e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, TextField, FormControl, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function InputSearch({onInputChange, onSearch, locationText}) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Container fixed>\n        <FormControl fullWidth>\n          <TextField className={classes.textField} label=\"Country\" onChange={onInputChange} value={locationText}/>\n          <Button onClick={onSearch} color=\"primary\">Search</Button>\n        </FormControl>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container } from '@material-ui/core';\n\nexport default function Map({ options, onMount, className, onMountProps }) {\n  const ref = useRef();\n  const [map, setMap] = useState();\n  useEffect(() => {\n    const onLoad = () =>\n      setMap(new window.google.maps.Map(ref.current, options));\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyC-WvSjRaa4wrDpHz7p2UH3yMp1F_n2K4Q`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, [options]);\n  if (map && typeof onMount === `function`) onMount(map, onMountProps);\n  return (\n    <div>\n      <Container fixed>\n        <div\n          style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n          {...{ ref, className }}\n        />\n      </Container>\n    </div>\n  );\n}\n\nMap.defaultProps = {\n  options: {\n    center: { lat: 22, lng: -100 },\n    zoom: 4,\n  },\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport InputSearch from \"./components/inputSearch\";\nimport Map from \"./components/map\";\nimport { Typography, Container } from \"@material-ui/core\";\n\nconst PLACE_URL = \"https://nominatim.openstreetmap.org/?format=json&limit=1\";\nconst QUAKES_URL =\n  \"http://api.geonames.org/earthquakesJSON?username=rsanchez006&maxRows=10\";\n\nfunction App() {\n  const [locationText, setLocationText] = useState(\"\");\n  const [quakes, setQuakes] = useState([]);\n  const [country, setCountry] = useState({\n    lat: 22,\n    lon: -100,\n  });\n\n  const onInputChange = (event) => {\n    setLocationText(event.target.value);\n  };\n\n  const onButtonClick = async () => {\n    if (!locationText.trim()) {\n      alert(\"Enter country\");\n    } else {\n      await fetch(`${PLACE_URL}&country=\"${locationText}`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          if (data.length) {\n            setCountry(data[0]);\n            getQuakes(data[0].boundingbox);\n          } else {\n            alert(\"Invalid country\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"Error\");\n        });\n    }\n  };\n\n  const getQuakes = async (bb) => {\n    await fetch(\n      `${QUAKES_URL}&south=${bb[0]}&north=${bb[1]}&west=${bb[2]}&east=${bb[3]}`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setQuakes([...data.earthquakes]);\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Error\");\n      });\n  };\n\n  function addMarkers(map, links) {\n    links.forEach((item) => {\n      new window.google.maps.Marker({\n        map,\n        position: { lat: item.lat, lng: item.lng },\n        label: `${item.magnitude}`,\n        title: item.datetime,\n      });\n    });\n  }\n\n  const mapProps = {\n    options: {\n      center: { lat: Number(country.lat), lng: Number(country.lon) },\n      zoom: 4,\n    },\n    onMount: addMarkers,\n    onMountProps: quakes,\n  };\n\n  return (\n    <div>\n      <Container fixed>\n        <Typography variant=\"h3\">Search earthquakes</Typography>\n      </Container>\n      <InputSearch\n        onInputChange={onInputChange}\n        onSearch={onButtonClick}\n        locationText={locationText}\n      />\n      <div>\n        <Map {...mapProps} />\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}